{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACaC,KAAKC,SAAW,GAIpCJ,EAAI,uBAAwCK,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAGlDG,EAAI,sBAAqCI,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M,GAEhDA,E,IAIP,IAAMQ,EAASC,SAASC,cAAc,SAEtCF,EAAOG,iBAAiB,UAExB,SAAkBC,GAChBA,EAAIC,iBAQJ,IANA,IAAgCC,EAAAF,EAAIG,cAAcC,SAA1ChB,EAAwBc,EAAxBd,MAAOiB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAEjBC,EAAaC,OAAOpB,EAAMqB,OACxBC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEzBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrC1B,EAAc0B,EAAGL,GACdM,MAAK,SAAAvB,GACJN,EAAA8B,OAAOC,QAAQzB,E,IAEhB0B,OAAM,SAAAC,GACLjC,EAAA8B,OAAOI,QAAQD,E,IAGnBV,GAAcG,EAGhBd,EAAOuB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        // Fulfill\n        res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        rej(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  let delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(res => {\n        Notify.success(res);\n      })\n      .catch(err => {\n        Notify.failure(err);\n      });\n\n    delayValue += stepValue;\n  }\n\n  formEl.reset();\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","setTimeout","Math","random","concat","$ce04d3a99e08e73b$var$formEl","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","step","amount","delayValue","Number","value","stepValue","amountValue","i","then","Notify","success","catch","err","failure","reset"],"version":3,"file":"03-promises.5e7074f7.js.map"}