{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACaC,KAAKC,SAAW,GAIpCJ,EAAI,uBAAqBH,QAAiBC,OAG1CG,EAAI,sBAAoBJ,QAAeC,MAAU,GAElDA,EAAM,G,CAIb,MAAMO,EAASC,SAASC,cAAc,SAEtCF,EAAOG,iBAAiB,UAExB,SAAkBC,GAChBA,EAAIC,iBAEJ,MAAMZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,GAAWH,EAAII,cAAcC,SAElD,IAAIC,EAAaC,OAAOlB,EAAMmB,OAC9B,MAAMC,EAAYF,OAAOL,EAAKM,OACxBE,EAAcH,OAAOJ,EAAOK,OAElC,GAAIE,EAAc,GAAKD,EAAY,GAAKH,EAAa,EAEnD,YADArB,EAAA0B,OAAOC,QAAQ,mCAIjB,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAaG,GAAK,EACrC1B,EAAc0B,EAAGP,GACdQ,MAAKvB,IACJwB,QAAQC,IAAIzB,GACZN,EAAA0B,OAAOM,QAAQ1B,EAAI,IAEpB2B,OAAMC,IACLlC,EAAA0B,OAAOC,QAAQO,EAAI,IAGvBb,GAAcG,EAGhBb,EAAOwB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        // Fulfill\n        res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        rej(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  let delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  if (amountValue < 0 || stepValue < 0 || delayValue < 0) {\n    Notify.failure(\"Please enter number more then 0\");\n    return;\n  }\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(res => {\n        console.log(res);\n        Notify.success(res);\n      })\n      .catch(err => {\n        Notify.failure(err);\n      });\n\n    delayValue += stepValue;\n  }\n\n  formEl.reset();\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","setTimeout","Math","random","$47d4ff9957288465$var$formEl","document","querySelector","addEventListener","evt","preventDefault","step","amount","currentTarget","elements","delayValue","Number","value","stepValue","amountValue","Notify","failure","i","then","console","log","success","catch","err","reset"],"version":3,"file":"03-promises.4f505f65.js.map"}